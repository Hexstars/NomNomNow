@using System.IdentityModel.Tokens.Jwt
@using System.Security.Claims
@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<!-- Fixed Horizontal Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top px-4">
    <div class="container-fluid">
        <!-- Brand and Left-aligned items -->
        <div class="d-flex align-items-center">
            <a class="navbar-brand" href="/">NomNomNow</a>
            <button class="navbar-toggler" type="button" @onclick="ToggleNavMenu" aria-controls="navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>

        <!-- Navbar Items -->
        <div class="collapse navbar-collapse" id="navbarNav" style="@(collapseNavMenu ? "display: none;" : "")">
            <!-- Left-aligned items -->
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">Trang chủ</NavLink>
                </li>

                @if (isLoggedIn)
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/cart">Giỏ hàng</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/orders">Đơn hàng</NavLink>
                    </li>
                    @if (userRole == "Admin")
                    {
                        <li class="nav-item">
                            <NavLink class="nav-link" href="/admin">Quản trị</NavLink>
                        </li>
                    }
                }
            </ul>

            <!-- Search Input (Centered) -->
            <form class="d-flex mx-auto" style="max-width: 500px;" @onsubmit="HandleSearch">
                <input class="form-control me-2" required type="search" placeholder="Tìm kiếm sản phẩm..." @bind="searchQuery" />
                <button class="btn btn-primary" type="submit">Tìm</button>
            </form>

            <!-- Right-aligned items -->
            <ul class="navbar-nav ms-auto">
                @if (isLoggedIn)
                {
                    <li class="nav-item">
                        <span class="nav-link text-light">Xin chào, @userEmail</span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-warning" href="#" @onclick="Logout">Đăng xuất</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/login">Đăng nhập</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/register">Đăng ký</NavLink>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

<!-- Main Content with proper spacing -->
<div class="container-fluid mt-5 pt-4 px-4 min-vh-100"><!-- min-vh-100 ensures footer stays at bottom -->
    <main class="px-3">
        @Body
    </main>
</div>
<!-- Footer -->
<footer class="bg-dark text-white py-4 mt-auto">
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <h5>NomNomNow</h5>
                <p>Đồ ăn ngon - Giao hàng nhanh</p>
            </div>
            <div class="col-md-4">
                <h5>Liên hệ</h5>
                <p>Email: contact@nomnomnow.com<br>Điện thoại: 0123 456 789</p>
            </div>
            <div class="col-md-4">
                <h5>Thời gian hoạt động</h5>
                <p>Thứ 2 - Thứ 6: 8h - 22h<br>Thứ 7 - CN: 9h - 23h</p>
            </div>
        </div>
        <div class="text-center mt-3">
            <p class="mb-0">&copy; 2025 NomNomNow. All rights reserved.</p>
        </div>
    </div>
</footer>
@code {
    private bool collapseNavMenu = true;
    private bool isLoggedIn = false;
    private string? userId;
    private string? userEmail;
    private string? userRole;
    private string searchQuery = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
        isLoggedIn = !string.IsNullOrEmpty(token);

        if (isLoggedIn)
        {
            try
            {
                var handler = new JwtSecurityTokenHandler();
                var jwtToken = handler.ReadJwtToken(token);
                userId = jwtToken.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
                userEmail = jwtToken.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email)?.Value;
                userRole = jwtToken.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
            }
            catch
            {
                await Logout();
            }
        }
    }

    private void ToggleNavMenu() => collapseNavMenu = !collapseNavMenu;

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "authToken");
        isLoggedIn = false;
        NavigationManager.NavigateTo("/", forceLoad: true);
    }

    private void HandleSearch()
    {
        if (!string.IsNullOrWhiteSpace(searchQuery))
        {
            NavigationManager.NavigateTo($"/search?name={Uri.EscapeDataString(searchQuery)}");
        }
    }
}